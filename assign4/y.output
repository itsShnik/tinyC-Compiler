Terminals unused in grammar

   STRUCT
   TYPEDEF
   UNION


Rules useless in parser due to conflicts

  115 identifier_opt: IDENTIFIER


State 24 conflicts: 21 shift/reduce
State 25 conflicts: 21 shift/reduce
State 27 conflicts: 21 shift/reduce
State 28 conflicts: 21 shift/reduce
State 32 conflicts: 1 reduce/reduce
State 38 conflicts: 21 shift/reduce
State 55 conflicts: 1 shift/reduce, 2 reduce/reduce
State 60 conflicts: 1 shift/reduce
State 83 conflicts: 3 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 2 shift/reduce
State 92 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 100 conflicts: 46 shift/reduce, 1 reduce/reduce
State 172 conflicts: 1 shift/reduce
State 184 conflicts: 46 shift/reduce, 1 reduce/reduce
State 231 conflicts: 1 shift/reduce
State 232 conflicts: 1 shift/reduce
State 233 conflicts: 2 shift/reduce
State 234 conflicts: 2 shift/reduce
State 242 conflicts: 1 shift/reduce
State 244 conflicts: 1 shift/reduce
State 245 conflicts: 1 shift/reduce
State 247 conflicts: 25 shift/reduce
State 249 conflicts: 25 shift/reduce
State 272 conflicts: 1 shift/reduce
State 284 conflicts: 25 shift/reduce
State 306 conflicts: 25 shift/reduce
State 307 conflicts: 25 shift/reduce
State 308 conflicts: 25 shift/reduce
State 316 conflicts: 1 shift/reduce
State 323 conflicts: 25 shift/reduce
State 329 conflicts: 25 shift/reduce
State 332 conflicts: 25 shift/reduce


Grammar

    0 $accept: translation_unit END

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | '(' expression ')'

    5 postfix_expression: primary_expression
    6                   | postfix_expression '[' expression ']'
    7                   | postfix_expression '(' argument_expression_list_opt ')'
    8                   | postfix_expression '.' IDENTIFIER
    9                   | postfix_expression ARROW_ACCESS IDENTIFIER
   10                   | postfix_expression INCREMENT
   11                   | postfix_expression DECREMENT
   12                   | '(' type_name ')' '{' initializer_list '}'
   13                   | '(' type_name ')' '{' initializer_list ',' '}'

   14 argument_expression_list_opt: argument_expression_list
   15                             | %empty

   16 argument_expression_list: assignment_expression
   17                         | argument_expression_list ',' assignment_expression

   18 unary_expression: postfix_expression
   19                 | INCREMENT unary_expression
   20                 | DECREMENT unary_expression
   21                 | unary_operator cast_expression
   22                 | SIZEOF unary_expression
   23                 | SIZEOF '(' type_name ')'

   24 unary_operator: '&'
   25               | '*'
   26               | '+'
   27               | '-'
   28               | '~'
   29               | '!'

   30 cast_expression: unary_expression
   31                | '(' type_name ')' cast_expression

   32 multiplicative_expression: cast_expression
   33                          | multiplicative_expression '*' cast_expression
   34                          | multiplicative_expression '/' cast_expression
   35                          | multiplicative_expression '%' cast_expression

   36 additive_expression: multiplicative_expression
   37                    | additive_expression '+' multiplicative_expression
   38                    | additive_expression '-' multiplicative_expression

   39 shift_expression: additive_expression
   40                 | shift_expression LEFT_SHIFT additive_expression
   41                 | shift_expression RIGHT_SHIFT additive_expression

   42 relational_expression: shift_expression
   43                      | relational_expression '<' shift_expression
   44                      | relational_expression '>' shift_expression
   45                      | relational_expression LESSER_EQUAL shift_expression
   46                      | relational_expression GREATER_EQUAL shift_expression

   47 equality_expression: relational_expression
   48                    | equality_expression IS_EQUAL relational_expression
   49                    | equality_expression NOT_EQUAL relational_expression

   50 and_expression: equality_expression
   51               | and_expression '&' equality_expression

   52 exclusive_or_expression: and_expression
   53                        | exclusive_or_expression '^' and_expression

   54 inclusive_or_expression: exclusive_or_expression
   55                        | inclusive_or_expression '|' exclusive_or_expression

   56 logical_and_expression: inclusive_or_expression
   57                       | logical_and_expression LOGICAL_AND logical_or_expression

   58 logical_or_expression: logical_and_expression
   59                      | logical_or_expression LOGICAL_OR logical_and_expression

   60 conditional_expression: logical_or_expression
   61                       | logical_or_expression '?' expression ':' conditional_expression

   62 assignment_expression: conditional_expression
   63                      | unary_expression assignment_operator assignment_expression

   64 assignment_operator: '='
   65                    | MULT_ASSIGN
   66                    | DIV_ASSIGN
   67                    | REM_ASSIGN
   68                    | ADD_ASSIGN
   69                    | SUB_ASSIGN
   70                    | LEFT_SHIFT_ASSIGN
   71                    | RIGHT_SHIFT_ASSIGN
   72                    | BITWISE_AND_ASSIGN
   73                    | BITWISE_XOR_ASSIGN
   74                    | BITWISE_OR_ASSIGN

   75 expression: assignment_expression
   76           | expression ',' assignment_expression

   77 constant_expression: conditional_expression

   78 declaration: declaration_specifiers init_declarator_list_opt

   79 init_declarator_list_opt: init_declarator_list
   80                         | %empty

   81 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   82                       | type_specifier declaration_specifiers_opt
   83                       | type_qualifier declaration_specifiers_opt
   84                       | function_specifier declaration_specifiers_opt

   85 declaration_specifiers_opt: declaration_specifiers
   86                           | %empty

   87 init_declarator_list: init_declarator
   88                     | init_declarator_list ',' init_declarator

   89 init_declarator: declarator
   90                | declarator '=' initializer

   91 storage_class_specifier: EXTERN
   92                        | STATIC
   93                        | AUTO
   94                        | REGISTER

   95 type_specifier: VOID
   96               | CHAR
   97               | SHORT
   98               | INT
   99               | LONG
  100               | FLOAT
  101               | DOUBLE
  102               | SIGNED
  103               | UNSIGNED
  104               | BOOL
  105               | COMPLEX
  106               | IMAGINARY
  107               | enum_specifier

  108 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  109                         | type_qualifier specifier_qualifier_list_opt

  110 specifier_qualifier_list_opt: specifier_qualifier_list
  111                             | %empty

  112 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  113               | ENUM identifier_opt '{' enumerator_list ',' '}'
  114               | ENUM IDENTIFIER

  115 identifier_opt: IDENTIFIER
  116               | %empty

  117 enumerator_list: enumerator
  118                | enumerator_list ',' enumerator

  119 enumerator: IDENTIFIER
  120           | IDENTIFIER '=' constant_expression

  121 type_qualifier: CONST
  122               | RESTRICT
  123               | VOLATILE

  124 function_specifier: INLINE

  125 declarator: pointer_opt direct_declarator

  126 pointer_opt: pointer
  127            | %empty

  128 direct_declarator: IDENTIFIER
  129                  | '(' declarator ')'
  130                  | direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']'
  131                  | direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']'
  132                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  133                  | direct_declarator '[' type_qualifier_list_opt '*' ']'
  134                  | direct_declarator '(' parameter_type_list ')'
  135                  | direct_declarator '(' identifier_list_opt ')'

  136 type_qualifier_list_opt: type_qualifier_list
  137                        | %empty

  138 assignment_expression_opt: assignment_expression
  139                          | %empty

  140 identifier_list_opt: identifier_list
  141                    | %empty

  142 pointer: '*' type_qualifier_list_opt
  143        | '*' type_qualifier_list_opt pointer

  144 type_qualifier_list: type_qualifier
  145                    | type_qualifier_list type_qualifier

  146 parameter_type_list: parameter_list
  147                    | parameter_list ',' THREE_DOTS

  148 parameter_list: parameter_declaration
  149               | parameter_list ',' parameter_declaration

  150 parameter_declaration: declaration_specifiers declarator
  151                      | declaration_specifiers

  152 identifier_list: IDENTIFIER
  153                | identifier_list ',' IDENTIFIER

  154 type_name: specifier_qualifier_list

  155 initializer: assignment_expression
  156            | '{' initializer_list '}'
  157            | '{' initializer_list ',' '}'

  158 initializer_list: designation_opt initializer
  159                 | initializer_list ',' designation_opt initializer

  160 designation_opt: designation
  161                | %empty

  162 designation: designator_list '='

  163 designator_list: designator
  164                | designator_list designator

  165 designator: '[' constant_expression ']'
  166           | '.' IDENTIFIER

  167 statement: labeled_statement
  168          | compound_statement
  169          | expression_statement
  170          | selection_statement
  171          | iteration_statement
  172          | jump_statement

  173 labeled_statement: IDENTIFIER ':' statement
  174                  | CASE constant_expression ':' statement
  175                  | DEFAULT ':' statement

  176 compound_statement: '{' block_item_list_opt '}'

  177 block_item_list_opt: block_item_list
  178                    | %empty

  179 block_item_list: block_item
  180                | block_item_list block_item

  181 block_item: declaration
  182           | statement

  183 expression_statement: expression_opt

  184 expression_opt: expression
  185               | %empty

  186 selection_statement: IF '(' expression ')' statement
  187                    | IF '(' expression ')' statement ELSE statement
  188                    | SWITCH '(' expression ')' statement

  189 iteration_statement: WHILE '(' expression ')' statement
  190                    | DO statement WHILE '(' expression ')' ';'
  191                    | FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  192                    | FOR '(' declaration expression_opt ';' expression_opt ')' statement

  193 jump_statement: GOTO IDENTIFIER ';'
  194               | CONTINUE ';'
  195               | BREAK ';'
  196               | RETURN expression_opt ';'

  197 translation_unit: external_declaration
  198                 | translation_unit external_declaration

  199 external_declaration: function_definition
  200                     | declaration

  201 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  202 declaration_list_opt: declaration_list
  203                     | %empty

  204 declaration_list: declaration
  205                 | declaration_list declaration


Terminals, with rules where they appear

END (0) 0
'!' (33) 29
'%' (37) 35
'&' (38) 24 51
'(' (40) 4 7 12 13 23 31 129 134 135 186 187 188 189 190 191 192
')' (41) 4 7 12 13 23 31 129 134 135 186 187 188 189 190 191 192
'*' (42) 25 33 133 142 143
'+' (43) 26 37
',' (44) 13 17 76 88 113 118 147 149 153 157 159
'-' (45) 27 38
'.' (46) 8 166
'/' (47) 34
':' (58) 61 173 174 175
';' (59) 190 191 192 193 194 195 196
'<' (60) 43
'=' (61) 64 90 120 162
'>' (62) 44
'?' (63) 61
'[' (91) 6 130 131 132 133 165
']' (93) 6 130 131 132 133 165
'^' (94) 53
'{' (123) 12 13 112 113 156 157 176
'|' (124) 55
'}' (125) 12 13 112 113 156 157 176
'~' (126) 28
error (256)
CONSTANT (258) 2
STRING_LITERAL (259) 3
IDENTIFIER (260) 1 8 9 114 115 119 120 128 152 153 166 173 193
ARROW_ACCESS (261) 9
INCREMENT (262) 10 19
DECREMENT (263) 11 20
SIZEOF (264) 22 23
LEFT_SHIFT (265) 40
RIGHT_SHIFT (266) 41
LESSER_EQUAL (267) 45
GREATER_EQUAL (268) 46
IS_EQUAL (269) 48
NOT_EQUAL (270) 49
LOGICAL_AND (271) 57
LOGICAL_OR (272) 59
MULT_ASSIGN (273) 65
DIV_ASSIGN (274) 66
ADD_ASSIGN (275) 68
SUB_ASSIGN (276) 69
REM_ASSIGN (277) 67
LEFT_SHIFT_ASSIGN (278) 70
RIGHT_SHIFT_ASSIGN (279) 71
BITWISE_AND_ASSIGN (280) 72
BITWISE_XOR_ASSIGN (281) 73
BITWISE_OR_ASSIGN (282) 74
EXTERN (283) 91
STATIC (284) 92 131 132
AUTO (285) 93
REGISTER (286) 94
VOID (287) 95
CHAR (288) 96
SHORT (289) 97
INT (290) 98
LONG (291) 99
FLOAT (292) 100
DOUBLE (293) 101
SIGNED (294) 102
UNSIGNED (295) 103
BOOL (296) 104
COMPLEX (297) 105
IMAGINARY (298) 106
ENUM (299) 112 113 114
CONST (300) 121
RESTRICT (301) 122
VOLATILE (302) 123
INLINE (303) 124
THREE_DOTS (304) 147
CASE (305) 174
DEFAULT (306) 175
IF (307) 186 187
ELSE (308) 187
SWITCH (309) 188
WHILE (310) 189 190
DO (311) 190
FOR (312) 191 192
GOTO (313) 193
CONTINUE (314) 194
BREAK (315) 195
RETURN (316) 196
STRUCT (317)
TYPEDEF (318)
UNION (319)


Nonterminals, with rules where they appear

$accept (89)
    on left: 0
primary_expression (90)
    on left: 1 2 3 4, on right: 5
postfix_expression (91)
    on left: 5 6 7 8 9 10 11 12 13, on right: 6 7 8 9 10 11 18
argument_expression_list_opt (92)
    on left: 14 15, on right: 7
argument_expression_list (93)
    on left: 16 17, on right: 14 17
unary_expression (94)
    on left: 18 19 20 21 22 23, on right: 19 20 22 30 63
unary_operator (95)
    on left: 24 25 26 27 28 29, on right: 21
cast_expression (96)
    on left: 30 31, on right: 21 31 32 33 34 35
multiplicative_expression (97)
    on left: 32 33 34 35, on right: 33 34 35 36 37 38
additive_expression (98)
    on left: 36 37 38, on right: 37 38 39 40 41
shift_expression (99)
    on left: 39 40 41, on right: 40 41 42 43 44 45 46
relational_expression (100)
    on left: 42 43 44 45 46, on right: 43 44 45 46 47 48 49
equality_expression (101)
    on left: 47 48 49, on right: 48 49 50 51
and_expression (102)
    on left: 50 51, on right: 51 52 53
exclusive_or_expression (103)
    on left: 52 53, on right: 53 54 55
inclusive_or_expression (104)
    on left: 54 55, on right: 55 56
logical_and_expression (105)
    on left: 56 57, on right: 57 58 59
logical_or_expression (106)
    on left: 58 59, on right: 57 59 60 61
conditional_expression (107)
    on left: 60 61, on right: 61 62 77
assignment_expression (108)
    on left: 62 63, on right: 16 17 63 75 76 131 132 138 155
assignment_operator (109)
    on left: 64 65 66 67 68 69 70 71 72 73 74, on right: 63
expression (110)
    on left: 75 76, on right: 4 6 61 76 184 186 187 188 189 190
constant_expression (111)
    on left: 77, on right: 120 165 174
declaration (112)
    on left: 78, on right: 181 192 200 204 205
init_declarator_list_opt (113)
    on left: 79 80, on right: 78
declaration_specifiers (114)
    on left: 81 82 83 84, on right: 78 85 150 151 201
declaration_specifiers_opt (115)
    on left: 85 86, on right: 81 82 83 84
init_declarator_list (116)
    on left: 87 88, on right: 79 88
init_declarator (117)
    on left: 89 90, on right: 87 88
storage_class_specifier (118)
    on left: 91 92 93 94, on right: 81
type_specifier (119)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107, on right:
    82 108
specifier_qualifier_list (120)
    on left: 108 109, on right: 110 154
specifier_qualifier_list_opt (121)
    on left: 110 111, on right: 108 109
enum_specifier (122)
    on left: 112 113 114, on right: 107
identifier_opt (123)
    on left: 115 116, on right: 112 113
enumerator_list (124)
    on left: 117 118, on right: 112 113 118
enumerator (125)
    on left: 119 120, on right: 117 118
type_qualifier (126)
    on left: 121 122 123, on right: 83 109 144 145
function_specifier (127)
    on left: 124, on right: 84
declarator (128)
    on left: 125, on right: 89 90 129 150 201
pointer_opt (129)
    on left: 126 127, on right: 125
direct_declarator (130)
    on left: 128 129 130 131 132 133 134 135, on right: 125 130 131
    132 133 134 135
type_qualifier_list_opt (131)
    on left: 136 137, on right: 130 131 133 142 143
assignment_expression_opt (132)
    on left: 138 139, on right: 130
identifier_list_opt (133)
    on left: 140 141, on right: 135
pointer (134)
    on left: 142 143, on right: 126 143
type_qualifier_list (135)
    on left: 144 145, on right: 132 136 145
parameter_type_list (136)
    on left: 146 147, on right: 134
parameter_list (137)
    on left: 148 149, on right: 146 147 149
parameter_declaration (138)
    on left: 150 151, on right: 148 149
identifier_list (139)
    on left: 152 153, on right: 140 153
type_name (140)
    on left: 154, on right: 12 13 23 31
initializer (141)
    on left: 155 156 157, on right: 90 158 159
initializer_list (142)
    on left: 158 159, on right: 12 13 156 157 159
designation_opt (143)
    on left: 160 161, on right: 158 159
designation (144)
    on left: 162, on right: 160
designator_list (145)
    on left: 163 164, on right: 162 164
designator (146)
    on left: 165 166, on right: 163 164
statement (147)
    on left: 167 168 169 170 171 172, on right: 173 174 175 182 186
    187 188 189 190 191 192
labeled_statement (148)
    on left: 173 174 175, on right: 167
compound_statement (149)
    on left: 176, on right: 168 201
block_item_list_opt (150)
    on left: 177 178, on right: 176
block_item_list (151)
    on left: 179 180, on right: 177 180
block_item (152)
    on left: 181 182, on right: 179 180
expression_statement (153)
    on left: 183, on right: 169
expression_opt (154)
    on left: 184 185, on right: 183 191 192 196
selection_statement (155)
    on left: 186 187 188, on right: 170
iteration_statement (156)
    on left: 189 190 191 192, on right: 171
jump_statement (157)
    on left: 193 194 195 196, on right: 172
translation_unit (158)
    on left: 197 198, on right: 0 198
external_declaration (159)
    on left: 199 200, on right: 197 198
function_definition (160)
    on left: 201, on right: 199
declaration_list_opt (161)
    on left: 202 203, on right: 201
declaration_list (162)
    on left: 204 205, on right: 202 205


State 0

    0 $accept: . translation_unit END

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   91 storage_class_specifier: EXTERN .

    $default  reduce using rule 91 (storage_class_specifier)


State 2

   92 storage_class_specifier: STATIC .

    $default  reduce using rule 92 (storage_class_specifier)


State 3

   93 storage_class_specifier: AUTO .

    $default  reduce using rule 93 (storage_class_specifier)


State 4

   94 storage_class_specifier: REGISTER .

    $default  reduce using rule 94 (storage_class_specifier)


State 5

   95 type_specifier: VOID .

    $default  reduce using rule 95 (type_specifier)


State 6

   96 type_specifier: CHAR .

    $default  reduce using rule 96 (type_specifier)


State 7

   97 type_specifier: SHORT .

    $default  reduce using rule 97 (type_specifier)


State 8

   98 type_specifier: INT .

    $default  reduce using rule 98 (type_specifier)


State 9

   99 type_specifier: LONG .

    $default  reduce using rule 99 (type_specifier)


State 10

  100 type_specifier: FLOAT .

    $default  reduce using rule 100 (type_specifier)


State 11

  101 type_specifier: DOUBLE .

    $default  reduce using rule 101 (type_specifier)


State 12

  102 type_specifier: SIGNED .

    $default  reduce using rule 102 (type_specifier)


State 13

  103 type_specifier: UNSIGNED .

    $default  reduce using rule 103 (type_specifier)


State 14

  104 type_specifier: BOOL .

    $default  reduce using rule 104 (type_specifier)


State 15

  105 type_specifier: COMPLEX .

    $default  reduce using rule 105 (type_specifier)


State 16

  106 type_specifier: IMAGINARY .

    $default  reduce using rule 106 (type_specifier)


State 17

  112 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  113               | ENUM . identifier_opt '{' enumerator_list ',' '}'
  114               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 116 (identifier_opt)

    identifier_opt  go to state 33


State 18

  121 type_qualifier: CONST .

    $default  reduce using rule 121 (type_qualifier)


State 19

  122 type_qualifier: RESTRICT .

    $default  reduce using rule 122 (type_qualifier)


State 20

  123 type_qualifier: VOLATILE .

    $default  reduce using rule 123 (type_qualifier)


State 21

  124 function_specifier: INLINE .

    $default  reduce using rule 124 (function_specifier)


State 22

  200 external_declaration: declaration .

    $default  reduce using rule 200 (external_declaration)


State 23

   78 declaration: declaration_specifiers . init_declarator_list_opt
  201 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    '*'  shift, and go to state 34

    IDENTIFIER  reduce using rule 127 (pointer_opt)
    '('         reduce using rule 127 (pointer_opt)
    $default    reduce using rule 80 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   81 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    EXTERN     [reduce using rule 86 (declaration_specifiers_opt)]
    STATIC     [reduce using rule 86 (declaration_specifiers_opt)]
    AUTO       [reduce using rule 86 (declaration_specifiers_opt)]
    REGISTER   [reduce using rule 86 (declaration_specifiers_opt)]
    VOID       [reduce using rule 86 (declaration_specifiers_opt)]
    CHAR       [reduce using rule 86 (declaration_specifiers_opt)]
    SHORT      [reduce using rule 86 (declaration_specifiers_opt)]
    INT        [reduce using rule 86 (declaration_specifiers_opt)]
    LONG       [reduce using rule 86 (declaration_specifiers_opt)]
    FLOAT      [reduce using rule 86 (declaration_specifiers_opt)]
    DOUBLE     [reduce using rule 86 (declaration_specifiers_opt)]
    SIGNED     [reduce using rule 86 (declaration_specifiers_opt)]
    UNSIGNED   [reduce using rule 86 (declaration_specifiers_opt)]
    BOOL       [reduce using rule 86 (declaration_specifiers_opt)]
    COMPLEX    [reduce using rule 86 (declaration_specifiers_opt)]
    IMAGINARY  [reduce using rule 86 (declaration_specifiers_opt)]
    ENUM       [reduce using rule 86 (declaration_specifiers_opt)]
    CONST      [reduce using rule 86 (declaration_specifiers_opt)]
    RESTRICT   [reduce using rule 86 (declaration_specifiers_opt)]
    VOLATILE   [reduce using rule 86 (declaration_specifiers_opt)]
    INLINE     [reduce using rule 86 (declaration_specifiers_opt)]
    $default   reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   82 declaration_specifiers: type_specifier . declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    EXTERN     [reduce using rule 86 (declaration_specifiers_opt)]
    STATIC     [reduce using rule 86 (declaration_specifiers_opt)]
    AUTO       [reduce using rule 86 (declaration_specifiers_opt)]
    REGISTER   [reduce using rule 86 (declaration_specifiers_opt)]
    VOID       [reduce using rule 86 (declaration_specifiers_opt)]
    CHAR       [reduce using rule 86 (declaration_specifiers_opt)]
    SHORT      [reduce using rule 86 (declaration_specifiers_opt)]
    INT        [reduce using rule 86 (declaration_specifiers_opt)]
    LONG       [reduce using rule 86 (declaration_specifiers_opt)]
    FLOAT      [reduce using rule 86 (declaration_specifiers_opt)]
    DOUBLE     [reduce using rule 86 (declaration_specifiers_opt)]
    SIGNED     [reduce using rule 86 (declaration_specifiers_opt)]
    UNSIGNED   [reduce using rule 86 (declaration_specifiers_opt)]
    BOOL       [reduce using rule 86 (declaration_specifiers_opt)]
    COMPLEX    [reduce using rule 86 (declaration_specifiers_opt)]
    IMAGINARY  [reduce using rule 86 (declaration_specifiers_opt)]
    ENUM       [reduce using rule 86 (declaration_specifiers_opt)]
    CONST      [reduce using rule 86 (declaration_specifiers_opt)]
    RESTRICT   [reduce using rule 86 (declaration_specifiers_opt)]
    VOLATILE   [reduce using rule 86 (declaration_specifiers_opt)]
    INLINE     [reduce using rule 86 (declaration_specifiers_opt)]
    $default   reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  107 type_specifier: enum_specifier .

    $default  reduce using rule 107 (type_specifier)


State 27

   83 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    EXTERN     [reduce using rule 86 (declaration_specifiers_opt)]
    STATIC     [reduce using rule 86 (declaration_specifiers_opt)]
    AUTO       [reduce using rule 86 (declaration_specifiers_opt)]
    REGISTER   [reduce using rule 86 (declaration_specifiers_opt)]
    VOID       [reduce using rule 86 (declaration_specifiers_opt)]
    CHAR       [reduce using rule 86 (declaration_specifiers_opt)]
    SHORT      [reduce using rule 86 (declaration_specifiers_opt)]
    INT        [reduce using rule 86 (declaration_specifiers_opt)]
    LONG       [reduce using rule 86 (declaration_specifiers_opt)]
    FLOAT      [reduce using rule 86 (declaration_specifiers_opt)]
    DOUBLE     [reduce using rule 86 (declaration_specifiers_opt)]
    SIGNED     [reduce using rule 86 (declaration_specifiers_opt)]
    UNSIGNED   [reduce using rule 86 (declaration_specifiers_opt)]
    BOOL       [reduce using rule 86 (declaration_specifiers_opt)]
    COMPLEX    [reduce using rule 86 (declaration_specifiers_opt)]
    IMAGINARY  [reduce using rule 86 (declaration_specifiers_opt)]
    ENUM       [reduce using rule 86 (declaration_specifiers_opt)]
    CONST      [reduce using rule 86 (declaration_specifiers_opt)]
    RESTRICT   [reduce using rule 86 (declaration_specifiers_opt)]
    VOLATILE   [reduce using rule 86 (declaration_specifiers_opt)]
    INLINE     [reduce using rule 86 (declaration_specifiers_opt)]
    $default   reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   84 declaration_specifiers: function_specifier . declaration_specifiers_opt

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    EXTERN     [reduce using rule 86 (declaration_specifiers_opt)]
    STATIC     [reduce using rule 86 (declaration_specifiers_opt)]
    AUTO       [reduce using rule 86 (declaration_specifiers_opt)]
    REGISTER   [reduce using rule 86 (declaration_specifiers_opt)]
    VOID       [reduce using rule 86 (declaration_specifiers_opt)]
    CHAR       [reduce using rule 86 (declaration_specifiers_opt)]
    SHORT      [reduce using rule 86 (declaration_specifiers_opt)]
    INT        [reduce using rule 86 (declaration_specifiers_opt)]
    LONG       [reduce using rule 86 (declaration_specifiers_opt)]
    FLOAT      [reduce using rule 86 (declaration_specifiers_opt)]
    DOUBLE     [reduce using rule 86 (declaration_specifiers_opt)]
    SIGNED     [reduce using rule 86 (declaration_specifiers_opt)]
    UNSIGNED   [reduce using rule 86 (declaration_specifiers_opt)]
    BOOL       [reduce using rule 86 (declaration_specifiers_opt)]
    COMPLEX    [reduce using rule 86 (declaration_specifiers_opt)]
    IMAGINARY  [reduce using rule 86 (declaration_specifiers_opt)]
    ENUM       [reduce using rule 86 (declaration_specifiers_opt)]
    CONST      [reduce using rule 86 (declaration_specifiers_opt)]
    RESTRICT   [reduce using rule 86 (declaration_specifiers_opt)]
    VOLATILE   [reduce using rule 86 (declaration_specifiers_opt)]
    INLINE     [reduce using rule 86 (declaration_specifiers_opt)]
    $default   reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . END
  198 translation_unit: translation_unit . external_declaration

    END        shift, and go to state 46
    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  197 translation_unit: external_declaration .

    $default  reduce using rule 197 (translation_unit)


State 31

  199 external_declaration: function_definition .

    $default  reduce using rule 199 (external_declaration)


State 32

  114 enum_specifier: ENUM IDENTIFIER .
  115 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 114 (enum_specifier)
    '{'       [reduce using rule 115 (identifier_opt)]
    $default  reduce using rule 114 (enum_specifier)


State 33

  112 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  113               | ENUM identifier_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 48


State 34

  142 pointer: '*' . type_qualifier_list_opt
  143        | '*' . type_qualifier_list_opt pointer

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   78 declaration: declaration_specifiers init_declarator_list_opt .

    $default  reduce using rule 78 (declaration)


State 36

   79 init_declarator_list_opt: init_declarator_list .
   88 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 52

    $default  reduce using rule 79 (init_declarator_list_opt)


State 37

   87 init_declarator_list: init_declarator .

    $default  reduce using rule 87 (init_declarator_list)


State 38

   89 init_declarator: declarator .
   90                | declarator . '=' initializer
  201 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21
    '='        shift, and go to state 53

    EXTERN     [reduce using rule 89 (init_declarator)]
    STATIC     [reduce using rule 89 (init_declarator)]
    AUTO       [reduce using rule 89 (init_declarator)]
    REGISTER   [reduce using rule 89 (init_declarator)]
    VOID       [reduce using rule 89 (init_declarator)]
    CHAR       [reduce using rule 89 (init_declarator)]
    SHORT      [reduce using rule 89 (init_declarator)]
    INT        [reduce using rule 89 (init_declarator)]
    LONG       [reduce using rule 89 (init_declarator)]
    FLOAT      [reduce using rule 89 (init_declarator)]
    DOUBLE     [reduce using rule 89 (init_declarator)]
    SIGNED     [reduce using rule 89 (init_declarator)]
    UNSIGNED   [reduce using rule 89 (init_declarator)]
    BOOL       [reduce using rule 89 (init_declarator)]
    COMPLEX    [reduce using rule 89 (init_declarator)]
    IMAGINARY  [reduce using rule 89 (init_declarator)]
    ENUM       [reduce using rule 89 (init_declarator)]
    CONST      [reduce using rule 89 (init_declarator)]
    RESTRICT   [reduce using rule 89 (init_declarator)]
    VOLATILE   [reduce using rule 89 (init_declarator)]
    INLINE     [reduce using rule 89 (init_declarator)]
    '{'        reduce using rule 203 (declaration_list_opt)
    $default   reduce using rule 89 (init_declarator)

    declaration              go to state 54
    declaration_specifiers   go to state 55
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 56
    declaration_list         go to state 57


State 39

  125 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 58
    '('         shift, and go to state 59

    direct_declarator  go to state 60


State 40

  126 pointer_opt: pointer .

    $default  reduce using rule 126 (pointer_opt)


State 41

   85 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers_opt)


State 42

   81 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 81 (declaration_specifiers)


State 43

   82 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 82 (declaration_specifiers)


State 44

   83 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 83 (declaration_specifiers)


State 45

   84 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 84 (declaration_specifiers)


State 46

    0 $accept: translation_unit END .

    $default  accept


State 47

  198 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 198 (translation_unit)


State 48

  112 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  113               | ENUM identifier_opt '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 61

    enumerator_list  go to state 62
    enumerator       go to state 63


State 49

  144 type_qualifier_list: type_qualifier .

    $default  reduce using rule 144 (type_qualifier_list)


State 50

  142 pointer: '*' type_qualifier_list_opt .
  143        | '*' type_qualifier_list_opt . pointer

    '*'  shift, and go to state 34

    $default  reduce using rule 142 (pointer)

    pointer  go to state 64


State 51

  136 type_qualifier_list_opt: type_qualifier_list .
  145 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 65


State 52

   88 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 34

    $default  reduce using rule 127 (pointer_opt)

    init_declarator  go to state 66
    declarator       go to state 67
    pointer_opt      go to state 39
    pointer          go to state 40


State 53

   90 init_declarator: declarator '=' . initializer

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '{'             shift, and go to state 75
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 98
    initializer                go to state 99


State 54

  204 declaration_list: declaration .

    $default  reduce using rule 204 (declaration_list)


State 55

   78 declaration: declaration_specifiers . init_declarator_list_opt

    '*'  shift, and go to state 34

    IDENTIFIER  reduce using rule 80 (init_declarator_list_opt)
    IDENTIFIER  [reduce using rule 127 (pointer_opt)]
    '('         reduce using rule 80 (init_declarator_list_opt)
    '('         [reduce using rule 127 (pointer_opt)]
    '*'         [reduce using rule 80 (init_declarator_list_opt)]
    $default    reduce using rule 80 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 67
    pointer_opt               go to state 39
    pointer                   go to state 40


State 56

  201 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    '{'  shift, and go to state 100

    compound_statement  go to state 101


State 57

  202 declaration_list_opt: declaration_list .
  205 declaration_list: declaration_list . declaration

    EXTERN     shift, and go to state 1
    STATIC     shift, and go to state 2
    AUTO       shift, and go to state 3
    REGISTER   shift, and go to state 4
    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20
    INLINE     shift, and go to state 21

    $default  reduce using rule 202 (declaration_list_opt)

    declaration              go to state 102
    declaration_specifiers   go to state 55
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 58

  128 direct_declarator: IDENTIFIER .

    $default  reduce using rule 128 (direct_declarator)


State 59

  129 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 34

    $default  reduce using rule 127 (pointer_opt)

    declarator   go to state 103
    pointer_opt  go to state 39
    pointer      go to state 40


State 60

  125 declarator: pointer_opt direct_declarator .
  130 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_expression_opt ']'
  131                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  132                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  133                  | direct_declarator . '[' type_qualifier_list_opt '*' ']'
  134                  | direct_declarator . '(' parameter_type_list ')'
  135                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 104
    '['  shift, and go to state 105

    '('       [reduce using rule 125 (declarator)]
    $default  reduce using rule 125 (declarator)


State 61

  119 enumerator: IDENTIFIER .
  120           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 106

    $default  reduce using rule 119 (enumerator)


State 62

  112 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  113               | ENUM identifier_opt '{' enumerator_list . ',' '}'
  118 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 107
    ','  shift, and go to state 108


State 63

  117 enumerator_list: enumerator .

    $default  reduce using rule 117 (enumerator_list)


State 64

  143 pointer: '*' type_qualifier_list_opt pointer .

    $default  reduce using rule 143 (pointer)


State 65

  145 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 145 (type_qualifier_list)


State 66

   88 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 88 (init_declarator_list)


State 67

   89 init_declarator: declarator .
   90                | declarator . '=' initializer

    '='  shift, and go to state 53

    $default  reduce using rule 89 (init_declarator)


State 68

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 69

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 70

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 71

   19 unary_expression: INCREMENT . unary_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 109
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 110
    unary_operator      go to state 85


State 72

   20 unary_expression: DECREMENT . unary_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 109
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 111
    unary_operator      go to state 85


State 73

   22 unary_expression: SIZEOF . unary_expression
   23                 | SIZEOF . '(' type_name ')'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 112
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 113
    unary_operator      go to state 85


State 74

    4 primary_expression: '(' . expression ')'
   12 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   13                   | '(' . type_name ')' '{' initializer_list ',' '}'
   31 cast_expression: '(' . type_name ')' cast_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    ENUM            shift, and go to state 17
    CONST           shift, and go to state 18
    RESTRICT        shift, and go to state 19
    VOLATILE        shift, and go to state 20
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 26
    type_qualifier             go to state 118
    type_name                  go to state 119


State 75

  156 initializer: '{' . initializer_list '}'
  157            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 120
    '.'  shift, and go to state 121

    $default  reduce using rule 161 (designation_opt)

    initializer_list  go to state 122
    designation_opt   go to state 123
    designation       go to state 124
    designator_list   go to state 125
    designator        go to state 126


State 76

   24 unary_operator: '&' .

    $default  reduce using rule 24 (unary_operator)


State 77

   25 unary_operator: '*' .

    $default  reduce using rule 25 (unary_operator)


State 78

   26 unary_operator: '+' .

    $default  reduce using rule 26 (unary_operator)


State 79

   27 unary_operator: '-' .

    $default  reduce using rule 27 (unary_operator)


State 80

   28 unary_operator: '~' .

    $default  reduce using rule 28 (unary_operator)


State 81

   29 unary_operator: '!' .

    $default  reduce using rule 29 (unary_operator)


State 82

    5 postfix_expression: primary_expression .

    $default  reduce using rule 5 (postfix_expression)


State 83

    6 postfix_expression: postfix_expression . '[' expression ']'
    7                   | postfix_expression . '(' argument_expression_list_opt ')'
    8                   | postfix_expression . '.' IDENTIFIER
    9                   | postfix_expression . ARROW_ACCESS IDENTIFIER
   10                   | postfix_expression . INCREMENT
   11                   | postfix_expression . DECREMENT
   18 unary_expression: postfix_expression .

    ARROW_ACCESS  shift, and go to state 127
    INCREMENT     shift, and go to state 128
    DECREMENT     shift, and go to state 129
    '('           shift, and go to state 130
    '['           shift, and go to state 131
    '.'           shift, and go to state 132

    INCREMENT  [reduce using rule 18 (unary_expression)]
    DECREMENT  [reduce using rule 18 (unary_expression)]
    '('        [reduce using rule 18 (unary_expression)]
    $default   reduce using rule 18 (unary_expression)


State 84

   30 cast_expression: unary_expression .
   63 assignment_expression: unary_expression . assignment_operator assignment_expression

    MULT_ASSIGN         shift, and go to state 133
    DIV_ASSIGN          shift, and go to state 134
    ADD_ASSIGN          shift, and go to state 135
    SUB_ASSIGN          shift, and go to state 136
    REM_ASSIGN          shift, and go to state 137
    LEFT_SHIFT_ASSIGN   shift, and go to state 138
    RIGHT_SHIFT_ASSIGN  shift, and go to state 139
    BITWISE_AND_ASSIGN  shift, and go to state 140
    BITWISE_XOR_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    '='                 shift, and go to state 143

    $default  reduce using rule 30 (cast_expression)

    assignment_operator  go to state 144


State 85

   21 unary_expression: unary_operator . cast_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 145
    unary_operator      go to state 85
    cast_expression     go to state 146


State 86

   32 multiplicative_expression: cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 87

   33 multiplicative_expression: multiplicative_expression . '*' cast_expression
   34                          | multiplicative_expression . '/' cast_expression
   35                          | multiplicative_expression . '%' cast_expression
   36 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 147
    '/'  shift, and go to state 148
    '%'  shift, and go to state 149

    '*'       [reduce using rule 36 (additive_expression)]
    $default  reduce using rule 36 (additive_expression)


State 88

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   39 shift_expression: additive_expression .

    '+'  shift, and go to state 150
    '-'  shift, and go to state 151

    '+'       [reduce using rule 39 (shift_expression)]
    '-'       [reduce using rule 39 (shift_expression)]
    $default  reduce using rule 39 (shift_expression)


State 89

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   42 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 42 (relational_expression)


State 90

   43 relational_expression: relational_expression . '<' shift_expression
   44                      | relational_expression . '>' shift_expression
   45                      | relational_expression . LESSER_EQUAL shift_expression
   46                      | relational_expression . GREATER_EQUAL shift_expression
   47 equality_expression: relational_expression .

    LESSER_EQUAL   shift, and go to state 154
    GREATER_EQUAL  shift, and go to state 155
    '<'            shift, and go to state 156
    '>'            shift, and go to state 157

    $default  reduce using rule 47 (equality_expression)


State 91

   48 equality_expression: equality_expression . IS_EQUAL relational_expression
   49                    | equality_expression . NOT_EQUAL relational_expression
   50 and_expression: equality_expression .

    IS_EQUAL   shift, and go to state 158
    NOT_EQUAL  shift, and go to state 159

    $default  reduce using rule 50 (and_expression)


State 92

   51 and_expression: and_expression . '&' equality_expression
   52 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 160

    '&'       [reduce using rule 52 (exclusive_or_expression)]
    $default  reduce using rule 52 (exclusive_or_expression)


State 93

   53 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   54 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 161

    $default  reduce using rule 54 (inclusive_or_expression)


State 94

   55 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   56 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 162

    $default  reduce using rule 56 (logical_and_expression)


State 95

   57 logical_and_expression: logical_and_expression . LOGICAL_AND logical_or_expression
   58 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 163

    LOGICAL_AND  [reduce using rule 58 (logical_or_expression)]
    $default     reduce using rule 58 (logical_or_expression)


State 96

   59 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression
   60 conditional_expression: logical_or_expression .
   61                       | logical_or_expression . '?' expression ':' conditional_expression

    LOGICAL_OR  shift, and go to state 164
    '?'         shift, and go to state 165

    $default  reduce using rule 60 (conditional_expression)


State 97

   62 assignment_expression: conditional_expression .

    $default  reduce using rule 62 (assignment_expression)


State 98

  155 initializer: assignment_expression .

    $default  reduce using rule 155 (initializer)


State 99

   90 init_declarator: declarator '=' initializer .

    $default  reduce using rule 90 (init_declarator)


State 100

  176 compound_statement: '{' . block_item_list_opt '}'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    ENUM            shift, and go to state 17
    CONST           shift, and go to state 18
    RESTRICT        shift, and go to state 19
    VOLATILE        shift, and go to state 20
    INLINE          shift, and go to state 21
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    EXTERN          [reduce using rule 185 (expression_opt)]
    STATIC          [reduce using rule 185 (expression_opt)]
    AUTO            [reduce using rule 185 (expression_opt)]
    REGISTER        [reduce using rule 185 (expression_opt)]
    VOID            [reduce using rule 185 (expression_opt)]
    CHAR            [reduce using rule 185 (expression_opt)]
    SHORT           [reduce using rule 185 (expression_opt)]
    INT             [reduce using rule 185 (expression_opt)]
    LONG            [reduce using rule 185 (expression_opt)]
    FLOAT           [reduce using rule 185 (expression_opt)]
    DOUBLE          [reduce using rule 185 (expression_opt)]
    SIGNED          [reduce using rule 185 (expression_opt)]
    UNSIGNED        [reduce using rule 185 (expression_opt)]
    BOOL            [reduce using rule 185 (expression_opt)]
    COMPLEX         [reduce using rule 185 (expression_opt)]
    IMAGINARY       [reduce using rule 185 (expression_opt)]
    ENUM            [reduce using rule 185 (expression_opt)]
    CONST           [reduce using rule 185 (expression_opt)]
    RESTRICT        [reduce using rule 185 (expression_opt)]
    VOLATILE        [reduce using rule 185 (expression_opt)]
    INLINE          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '}'             reduce using rule 178 (block_item_list_opt)
    '}'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    declaration                go to state 179
    declaration_specifiers     go to state 55
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 180
    labeled_statement          go to state 181
    compound_statement         go to state 182
    block_item_list_opt        go to state 183
    block_item_list            go to state 184
    block_item                 go to state 185
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 101

  201 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 201 (function_definition)


State 102

  205 declaration_list: declaration_list declaration .

    $default  reduce using rule 205 (declaration_list)


State 103

  129 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 191


State 104

  134 direct_declarator: direct_declarator '(' . parameter_type_list ')'
  135                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER  shift, and go to state 192
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    BOOL        shift, and go to state 14
    COMPLEX     shift, and go to state 15
    IMAGINARY   shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 141 (identifier_list_opt)

    declaration_specifiers   go to state 193
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 194
    parameter_type_list      go to state 195
    parameter_list           go to state 196
    parameter_declaration    go to state 197
    identifier_list          go to state 198


State 105

  130 direct_declarator: direct_declarator '[' . type_qualifier_list_opt assignment_expression_opt ']'
  131                  | direct_declarator '[' . STATIC type_qualifier_list_opt assignment_expression ']'
  132                  | direct_declarator '[' . type_qualifier_list STATIC assignment_expression ']'
  133                  | direct_declarator '[' . type_qualifier_list_opt '*' ']'

    STATIC    shift, and go to state 199
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 200
    type_qualifier_list      go to state 201


State 106

  120 enumerator: IDENTIFIER '=' . constant_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 202
    constant_expression        go to state 203


State 107

  112 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 112 (enum_specifier)


State 108

  113 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' . '}'
  118 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 61
    '}'         shift, and go to state 204

    enumerator  go to state 205


State 109

    4 primary_expression: '(' . expression ')'
   12 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   13                   | '(' . type_name ')' '{' initializer_list ',' '}'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    ENUM            shift, and go to state 17
    CONST           shift, and go to state 18
    RESTRICT        shift, and go to state 19
    VOLATILE        shift, and go to state 20
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 26
    type_qualifier             go to state 118
    type_name                  go to state 206


State 110

   19 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 111

   20 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 112

    4 primary_expression: '(' . expression ')'
   12 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   13                   | '(' . type_name ')' '{' initializer_list ',' '}'
   23 unary_expression: SIZEOF '(' . type_name ')'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    ENUM            shift, and go to state 17
    CONST           shift, and go to state 18
    RESTRICT        shift, and go to state 19
    VOLATILE        shift, and go to state 20
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 115
    type_specifier             go to state 116
    specifier_qualifier_list   go to state 117
    enum_specifier             go to state 26
    type_qualifier             go to state 118
    type_name                  go to state 207


State 113

   22 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 114

   75 expression: assignment_expression .

    $default  reduce using rule 75 (expression)


State 115

    4 primary_expression: '(' expression . ')'
   76 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 208
    ','  shift, and go to state 209


State 116

  108 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20

    $default  reduce using rule 111 (specifier_qualifier_list_opt)

    type_specifier                go to state 116
    specifier_qualifier_list      go to state 210
    specifier_qualifier_list_opt  go to state 211
    enum_specifier                go to state 26
    type_qualifier                go to state 118


State 117

  154 type_name: specifier_qualifier_list .

    $default  reduce using rule 154 (type_name)


State 118

  109 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    VOID       shift, and go to state 5
    CHAR       shift, and go to state 6
    SHORT      shift, and go to state 7
    INT        shift, and go to state 8
    LONG       shift, and go to state 9
    FLOAT      shift, and go to state 10
    DOUBLE     shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    ENUM       shift, and go to state 17
    CONST      shift, and go to state 18
    RESTRICT   shift, and go to state 19
    VOLATILE   shift, and go to state 20

    $default  reduce using rule 111 (specifier_qualifier_list_opt)

    type_specifier                go to state 116
    specifier_qualifier_list      go to state 210
    specifier_qualifier_list_opt  go to state 212
    enum_specifier                go to state 26
    type_qualifier                go to state 118


State 119

   12 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   13                   | '(' type_name . ')' '{' initializer_list ',' '}'
   31 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 213


State 120

  165 designator: '[' . constant_expression ']'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 202
    constant_expression        go to state 214


State 121

  166 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 122

  156 initializer: '{' initializer_list . '}'
  157            | '{' initializer_list . ',' '}'
  159 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 216
    ','  shift, and go to state 217


State 123

  158 initializer_list: designation_opt . initializer

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '{'             shift, and go to state 75
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 98
    initializer                go to state 218


State 124

  160 designation_opt: designation .

    $default  reduce using rule 160 (designation_opt)


State 125

  162 designation: designator_list . '='
  164 designator_list: designator_list . designator

    '['  shift, and go to state 120
    '.'  shift, and go to state 121
    '='  shift, and go to state 219

    designator  go to state 220


State 126

  163 designator_list: designator .

    $default  reduce using rule 163 (designator_list)


State 127

    9 postfix_expression: postfix_expression ARROW_ACCESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 221


State 128

   10 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 10 (postfix_expression)


State 129

   11 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 11 (postfix_expression)


State 130

    7 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 15 (argument_expression_list_opt)

    primary_expression            go to state 82
    postfix_expression            go to state 83
    argument_expression_list_opt  go to state 222
    argument_expression_list      go to state 223
    unary_expression              go to state 84
    unary_operator                go to state 85
    cast_expression               go to state 86
    multiplicative_expression     go to state 87
    additive_expression           go to state 88
    shift_expression              go to state 89
    relational_expression         go to state 90
    equality_expression           go to state 91
    and_expression                go to state 92
    exclusive_or_expression       go to state 93
    inclusive_or_expression       go to state 94
    logical_and_expression        go to state 95
    logical_or_expression         go to state 96
    conditional_expression        go to state 97
    assignment_expression         go to state 224


State 131

    6 postfix_expression: postfix_expression '[' . expression ']'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 225


State 132

    8 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 226


State 133

   65 assignment_operator: MULT_ASSIGN .

    $default  reduce using rule 65 (assignment_operator)


State 134

   66 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 135

   68 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 136

   69 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 137

   67 assignment_operator: REM_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 138

   70 assignment_operator: LEFT_SHIFT_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 139

   71 assignment_operator: RIGHT_SHIFT_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 140

   72 assignment_operator: BITWISE_AND_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 141

   73 assignment_operator: BITWISE_XOR_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 142

   74 assignment_operator: BITWISE_OR_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 143

   64 assignment_operator: '=' .

    $default  reduce using rule 64 (assignment_operator)


State 144

   63 assignment_expression: unary_expression assignment_operator . assignment_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 227


State 145

   30 cast_expression: unary_expression .

    $default  reduce using rule 30 (cast_expression)


State 146

   21 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 21 (unary_expression)


State 147

   33 multiplicative_expression: multiplicative_expression '*' . cast_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 145
    unary_operator      go to state 85
    cast_expression     go to state 228


State 148

   34 multiplicative_expression: multiplicative_expression '/' . cast_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 145
    unary_operator      go to state 85
    cast_expression     go to state 229


State 149

   35 multiplicative_expression: multiplicative_expression '%' . cast_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 145
    unary_operator      go to state 85
    cast_expression     go to state 230


State 150

   37 additive_expression: additive_expression '+' . multiplicative_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 231


State 151

   38 additive_expression: additive_expression '-' . multiplicative_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 232


State 152

   40 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 233


State 153

   41 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 234


State 154

   45 relational_expression: relational_expression LESSER_EQUAL . shift_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 235


State 155

   46 relational_expression: relational_expression GREATER_EQUAL . shift_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 236


State 156

   43 relational_expression: relational_expression '<' . shift_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 237


State 157

   44 relational_expression: relational_expression '>' . shift_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 238


State 158

   48 equality_expression: equality_expression IS_EQUAL . relational_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 239


State 159

   49 equality_expression: equality_expression NOT_EQUAL . relational_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 240


State 160

   51 and_expression: and_expression '&' . equality_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 241


State 161

   53 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 242


State 162

   55 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 243


State 163

   57 logical_and_expression: logical_and_expression LOGICAL_AND . logical_or_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 244


State 164

   59 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 245


State 165

   61 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 246


State 166

    1 primary_expression: IDENTIFIER .
  173 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 247

    $default  reduce using rule 1 (primary_expression)


State 167

  174 labeled_statement: CASE . constant_expression ':' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 202
    constant_expression        go to state 248


State 168

  175 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 249


State 169

  186 selection_statement: IF . '(' expression ')' statement
  187                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 250


State 170

  188 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 251


State 171

  189 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 252


State 172

  190 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    WHILE  [reduce using rule 185 (expression_opt)]

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 253
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 173

  191 iteration_statement: FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  192                    | FOR . '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 254


State 174

  193 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 255


State 175

  194 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 256


State 176

  195 jump_statement: BREAK . ';'

    ';'  shift, and go to state 257


State 177

  196 jump_statement: RETURN . expression_opt ';'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    expression_opt             go to state 258


State 178

   76 expression: expression . ',' assignment_expression
  184 expression_opt: expression .

    ','  shift, and go to state 209

    $default  reduce using rule 184 (expression_opt)


State 179

  181 block_item: declaration .

    $default  reduce using rule 181 (block_item)


State 180

  182 block_item: statement .

    $default  reduce using rule 182 (block_item)


State 181

  167 statement: labeled_statement .

    $default  reduce using rule 167 (statement)


State 182

  168 statement: compound_statement .

    $default  reduce using rule 168 (statement)


State 183

  176 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 259


State 184

  177 block_item_list_opt: block_item_list .
  180 block_item_list: block_item_list . block_item

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    ENUM            shift, and go to state 17
    CONST           shift, and go to state 18
    RESTRICT        shift, and go to state 19
    VOLATILE        shift, and go to state 20
    INLINE          shift, and go to state 21
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    EXTERN          [reduce using rule 185 (expression_opt)]
    STATIC          [reduce using rule 185 (expression_opt)]
    AUTO            [reduce using rule 185 (expression_opt)]
    REGISTER        [reduce using rule 185 (expression_opt)]
    VOID            [reduce using rule 185 (expression_opt)]
    CHAR            [reduce using rule 185 (expression_opt)]
    SHORT           [reduce using rule 185 (expression_opt)]
    INT             [reduce using rule 185 (expression_opt)]
    LONG            [reduce using rule 185 (expression_opt)]
    FLOAT           [reduce using rule 185 (expression_opt)]
    DOUBLE          [reduce using rule 185 (expression_opt)]
    SIGNED          [reduce using rule 185 (expression_opt)]
    UNSIGNED        [reduce using rule 185 (expression_opt)]
    BOOL            [reduce using rule 185 (expression_opt)]
    COMPLEX         [reduce using rule 185 (expression_opt)]
    IMAGINARY       [reduce using rule 185 (expression_opt)]
    ENUM            [reduce using rule 185 (expression_opt)]
    CONST           [reduce using rule 185 (expression_opt)]
    RESTRICT        [reduce using rule 185 (expression_opt)]
    VOLATILE        [reduce using rule 185 (expression_opt)]
    INLINE          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '}'             reduce using rule 177 (block_item_list_opt)
    '}'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 177 (block_item_list_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    declaration                go to state 179
    declaration_specifiers     go to state 55
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 180
    labeled_statement          go to state 181
    compound_statement         go to state 182
    block_item                 go to state 260
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 185

  179 block_item_list: block_item .

    $default  reduce using rule 179 (block_item_list)


State 186

  169 statement: expression_statement .

    $default  reduce using rule 169 (statement)


State 187

  183 expression_statement: expression_opt .

    $default  reduce using rule 183 (expression_statement)


State 188

  170 statement: selection_statement .

    $default  reduce using rule 170 (statement)


State 189

  171 statement: iteration_statement .

    $default  reduce using rule 171 (statement)


State 190

  172 statement: jump_statement .

    $default  reduce using rule 172 (statement)


State 191

  129 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 129 (direct_declarator)


State 192

  152 identifier_list: IDENTIFIER .

    $default  reduce using rule 152 (identifier_list)


State 193

  150 parameter_declaration: declaration_specifiers . declarator
  151                      | declaration_specifiers .

    '*'  shift, and go to state 34

    ')'       reduce using rule 151 (parameter_declaration)
    ','       reduce using rule 151 (parameter_declaration)
    $default  reduce using rule 127 (pointer_opt)

    declarator   go to state 261
    pointer_opt  go to state 39
    pointer      go to state 40


State 194

  135 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 262


State 195

  134 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 263


State 196

  146 parameter_type_list: parameter_list .
  147                    | parameter_list . ',' THREE_DOTS
  149 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 264

    $default  reduce using rule 146 (parameter_type_list)


State 197

  148 parameter_list: parameter_declaration .

    $default  reduce using rule 148 (parameter_list)


State 198

  140 identifier_list_opt: identifier_list .
  153 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 265

    $default  reduce using rule 140 (identifier_list_opt)


State 199

  131 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list_opt assignment_expression ']'

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 266
    type_qualifier_list      go to state 51


State 200

  130 direct_declarator: direct_declarator '[' type_qualifier_list_opt . assignment_expression_opt ']'
  133                  | direct_declarator '[' type_qualifier_list_opt . '*' ']'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 267
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 139 (assignment_expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 268
    assignment_expression_opt  go to state 269


State 201

  132 direct_declarator: direct_declarator '[' type_qualifier_list . STATIC assignment_expression ']'
  136 type_qualifier_list_opt: type_qualifier_list .
  145 type_qualifier_list: type_qualifier_list . type_qualifier

    STATIC    shift, and go to state 270
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 65


State 202

   77 constant_expression: conditional_expression .

    $default  reduce using rule 77 (constant_expression)


State 203

  120 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 120 (enumerator)


State 204

  113 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 113 (enum_specifier)


State 205

  118 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 118 (enumerator_list)


State 206

   12 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   13                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 271


State 207

   12 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   13                   | '(' type_name . ')' '{' initializer_list ',' '}'
   23 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 272


State 208

    4 primary_expression: '(' expression ')' .

    $default  reduce using rule 4 (primary_expression)


State 209

   76 expression: expression ',' . assignment_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 273


State 210

  110 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 110 (specifier_qualifier_list_opt)


State 211

  108 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 108 (specifier_qualifier_list)


State 212

  109 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 109 (specifier_qualifier_list)


State 213

   12 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   13                   | '(' type_name ')' . '{' initializer_list ',' '}'
   31 cast_expression: '(' type_name ')' . cast_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '{'             shift, and go to state 274
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 145
    unary_operator      go to state 85
    cast_expression     go to state 275


State 214

  165 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 276


State 215

  166 designator: '.' IDENTIFIER .

    $default  reduce using rule 166 (designator)


State 216

  156 initializer: '{' initializer_list '}' .

    $default  reduce using rule 156 (initializer)


State 217

  157 initializer: '{' initializer_list ',' . '}'
  159 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 120
    '.'  shift, and go to state 121
    '}'  shift, and go to state 277

    $default  reduce using rule 161 (designation_opt)

    designation_opt  go to state 278
    designation      go to state 124
    designator_list  go to state 125
    designator       go to state 126


State 218

  158 initializer_list: designation_opt initializer .

    $default  reduce using rule 158 (initializer_list)


State 219

  162 designation: designator_list '=' .

    $default  reduce using rule 162 (designation)


State 220

  164 designator_list: designator_list designator .

    $default  reduce using rule 164 (designator_list)


State 221

    9 postfix_expression: postfix_expression ARROW_ACCESS IDENTIFIER .

    $default  reduce using rule 9 (postfix_expression)


State 222

    7 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 279


State 223

   14 argument_expression_list_opt: argument_expression_list .
   17 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 280

    $default  reduce using rule 14 (argument_expression_list_opt)


State 224

   16 argument_expression_list: assignment_expression .

    $default  reduce using rule 16 (argument_expression_list)


State 225

    6 postfix_expression: postfix_expression '[' expression . ']'
   76 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 281
    ','  shift, and go to state 209


State 226

    8 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 8 (postfix_expression)


State 227

   63 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 63 (assignment_expression)


State 228

   33 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 229

   34 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 230

   35 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 231

   33 multiplicative_expression: multiplicative_expression . '*' cast_expression
   34                          | multiplicative_expression . '/' cast_expression
   35                          | multiplicative_expression . '%' cast_expression
   37 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 147
    '/'  shift, and go to state 148
    '%'  shift, and go to state 149

    '*'       [reduce using rule 37 (additive_expression)]
    $default  reduce using rule 37 (additive_expression)


State 232

   33 multiplicative_expression: multiplicative_expression . '*' cast_expression
   34                          | multiplicative_expression . '/' cast_expression
   35                          | multiplicative_expression . '%' cast_expression
   38 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 147
    '/'  shift, and go to state 148
    '%'  shift, and go to state 149

    '*'       [reduce using rule 38 (additive_expression)]
    $default  reduce using rule 38 (additive_expression)


State 233

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   40 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    '+'  shift, and go to state 150
    '-'  shift, and go to state 151

    '+'       [reduce using rule 40 (shift_expression)]
    '-'       [reduce using rule 40 (shift_expression)]
    $default  reduce using rule 40 (shift_expression)


State 234

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   41 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    '+'  shift, and go to state 150
    '-'  shift, and go to state 151

    '+'       [reduce using rule 41 (shift_expression)]
    '-'       [reduce using rule 41 (shift_expression)]
    $default  reduce using rule 41 (shift_expression)


State 235

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression LESSER_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 45 (relational_expression)


State 236

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 46 (relational_expression)


State 237

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   43 relational_expression: relational_expression '<' shift_expression .

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 43 (relational_expression)


State 238

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   44 relational_expression: relational_expression '>' shift_expression .

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 44 (relational_expression)


State 239

   43 relational_expression: relational_expression . '<' shift_expression
   44                      | relational_expression . '>' shift_expression
   45                      | relational_expression . LESSER_EQUAL shift_expression
   46                      | relational_expression . GREATER_EQUAL shift_expression
   48 equality_expression: equality_expression IS_EQUAL relational_expression .

    LESSER_EQUAL   shift, and go to state 154
    GREATER_EQUAL  shift, and go to state 155
    '<'            shift, and go to state 156
    '>'            shift, and go to state 157

    $default  reduce using rule 48 (equality_expression)


State 240

   43 relational_expression: relational_expression . '<' shift_expression
   44                      | relational_expression . '>' shift_expression
   45                      | relational_expression . LESSER_EQUAL shift_expression
   46                      | relational_expression . GREATER_EQUAL shift_expression
   49 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESSER_EQUAL   shift, and go to state 154
    GREATER_EQUAL  shift, and go to state 155
    '<'            shift, and go to state 156
    '>'            shift, and go to state 157

    $default  reduce using rule 49 (equality_expression)


State 241

   48 equality_expression: equality_expression . IS_EQUAL relational_expression
   49                    | equality_expression . NOT_EQUAL relational_expression
   51 and_expression: and_expression '&' equality_expression .

    IS_EQUAL   shift, and go to state 158
    NOT_EQUAL  shift, and go to state 159

    $default  reduce using rule 51 (and_expression)


State 242

   51 and_expression: and_expression . '&' equality_expression
   53 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 160

    '&'       [reduce using rule 53 (exclusive_or_expression)]
    $default  reduce using rule 53 (exclusive_or_expression)


State 243

   53 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   55 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 161

    $default  reduce using rule 55 (inclusive_or_expression)


State 244

   57 logical_and_expression: logical_and_expression LOGICAL_AND logical_or_expression .
   59 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 164

    LOGICAL_OR  [reduce using rule 57 (logical_and_expression)]
    $default    reduce using rule 57 (logical_and_expression)


State 245

   57 logical_and_expression: logical_and_expression . LOGICAL_AND logical_or_expression
   59 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .

    LOGICAL_AND  shift, and go to state 163

    LOGICAL_AND  [reduce using rule 59 (logical_or_expression)]
    $default     reduce using rule 59 (logical_or_expression)


State 246

   61 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   76 expression: expression . ',' assignment_expression

    ','  shift, and go to state 209
    ':'  shift, and go to state 282


State 247

  173 labeled_statement: IDENTIFIER ':' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 283
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 248

  174 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 284


State 249

  175 labeled_statement: DEFAULT ':' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 285
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 250

  186 selection_statement: IF '(' . expression ')' statement
  187                    | IF '(' . expression ')' statement ELSE statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 286


State 251

  188 selection_statement: SWITCH '(' . expression ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 287


State 252

  189 iteration_statement: WHILE '(' . expression ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 288


State 253

  190 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 289


State 254

  191 iteration_statement: FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement
  192                    | FOR '(' . declaration expression_opt ';' expression_opt ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    EXTERN          shift, and go to state 1
    STATIC          shift, and go to state 2
    AUTO            shift, and go to state 3
    REGISTER        shift, and go to state 4
    VOID            shift, and go to state 5
    CHAR            shift, and go to state 6
    SHORT           shift, and go to state 7
    INT             shift, and go to state 8
    LONG            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    BOOL            shift, and go to state 14
    COMPLEX         shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    ENUM            shift, and go to state 17
    CONST           shift, and go to state 18
    RESTRICT        shift, and go to state 19
    VOLATILE        shift, and go to state 20
    INLINE          shift, and go to state 21
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    declaration                go to state 290
    declaration_specifiers     go to state 55
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 291


State 255

  193 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 292


State 256

  194 jump_statement: CONTINUE ';' .

    $default  reduce using rule 194 (jump_statement)


State 257

  195 jump_statement: BREAK ';' .

    $default  reduce using rule 195 (jump_statement)


State 258

  196 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 293


State 259

  176 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 176 (compound_statement)


State 260

  180 block_item_list: block_item_list block_item .

    $default  reduce using rule 180 (block_item_list)


State 261

  150 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 150 (parameter_declaration)


State 262

  135 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 135 (direct_declarator)


State 263

  134 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 134 (direct_declarator)


State 264

  147 parameter_type_list: parameter_list ',' . THREE_DOTS
  149 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    BOOL        shift, and go to state 14
    COMPLEX     shift, and go to state 15
    IMAGINARY   shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21
    THREE_DOTS  shift, and go to state 294

    declaration_specifiers   go to state 193
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 295


State 265

  153 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 296


State 266

  131 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt . assignment_expression ']'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 297


State 267

   25 unary_operator: '*' .
  133 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' . ']'

    ']'  shift, and go to state 298

    $default  reduce using rule 25 (unary_operator)


State 268

  138 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 138 (assignment_expression_opt)


State 269

  130 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt . ']'

    ']'  shift, and go to state 299


State 270

  132 direct_declarator: direct_declarator '[' type_qualifier_list STATIC . assignment_expression ']'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 300


State 271

   12 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   13                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 274


State 272

   12 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   13                   | '(' type_name ')' . '{' initializer_list ',' '}'
   23 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 274

    '{'       [reduce using rule 23 (unary_expression)]
    $default  reduce using rule 23 (unary_expression)


State 273

   76 expression: expression ',' assignment_expression .

    $default  reduce using rule 76 (expression)


State 274

   12 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   13                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 120
    '.'  shift, and go to state 121

    $default  reduce using rule 161 (designation_opt)

    initializer_list  go to state 301
    designation_opt   go to state 123
    designation       go to state 124
    designator_list   go to state 125
    designator        go to state 126


State 275

   31 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 31 (cast_expression)


State 276

  165 designator: '[' constant_expression ']' .

    $default  reduce using rule 165 (designator)


State 277

  157 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 157 (initializer)


State 278

  159 initializer_list: initializer_list ',' designation_opt . initializer

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '{'             shift, and go to state 75
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 98
    initializer                go to state 302


State 279

    7 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 7 (postfix_expression)


State 280

   17 argument_expression_list: argument_expression_list ',' . assignment_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 303


State 281

    6 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 6 (postfix_expression)


State 282

   61 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 145
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 304


State 283

  173 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 173 (labeled_statement)


State 284

  174 labeled_statement: CASE constant_expression ':' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 305
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 285

  175 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 175 (labeled_statement)


State 286

   76 expression: expression . ',' assignment_expression
  186 selection_statement: IF '(' expression . ')' statement
  187                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 306
    ','  shift, and go to state 209


State 287

   76 expression: expression . ',' assignment_expression
  188 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 307
    ','  shift, and go to state 209


State 288

   76 expression: expression . ',' assignment_expression
  189 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 308
    ','  shift, and go to state 209


State 289

  190 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 309


State 290

  192 iteration_statement: FOR '(' declaration . expression_opt ';' expression_opt ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    expression_opt             go to state 310


State 291

  191 iteration_statement: FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 311


State 292

  193 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 193 (jump_statement)


State 293

  196 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 196 (jump_statement)


State 294

  147 parameter_type_list: parameter_list ',' THREE_DOTS .

    $default  reduce using rule 147 (parameter_type_list)


State 295

  149 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 149 (parameter_list)


State 296

  153 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 153 (identifier_list)


State 297

  131 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression . ']'

    ']'  shift, and go to state 312


State 298

  133 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' ']' .

    $default  reduce using rule 133 (direct_declarator)


State 299

  130 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']' .

    $default  reduce using rule 130 (direct_declarator)


State 300

  132 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 313


State 301

   12 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   13                   | '(' type_name ')' '{' initializer_list . ',' '}'
  159 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 314
    ','  shift, and go to state 315


State 302

  159 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 159 (initializer_list)


State 303

   17 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 304

   61 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 61 (conditional_expression)


State 305

  174 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 174 (labeled_statement)


State 306

  186 selection_statement: IF '(' expression ')' . statement
  187                    | IF '(' expression ')' . statement ELSE statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 316
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 307

  188 selection_statement: SWITCH '(' expression ')' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 317
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 308

  189 iteration_statement: WHILE '(' expression ')' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 318
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 309

  190 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 319


State 310

  192 iteration_statement: FOR '(' declaration expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 320


State 311

  191 iteration_statement: FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    expression_opt             go to state 321


State 312

  131 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']' .

    $default  reduce using rule 131 (direct_declarator)


State 313

  132 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 132 (direct_declarator)


State 314

   12 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 12 (postfix_expression)


State 315

   13 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  159 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 120
    '.'  shift, and go to state 121
    '}'  shift, and go to state 322

    $default  reduce using rule 161 (designation_opt)

    designation_opt  go to state 278
    designation      go to state 124
    designator_list  go to state 125
    designator       go to state 126


State 316

  186 selection_statement: IF '(' expression ')' statement .
  187                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 323

    ELSE      [reduce using rule 186 (selection_statement)]
    $default  reduce using rule 186 (selection_statement)


State 317

  188 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 188 (selection_statement)


State 318

  189 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 189 (iteration_statement)


State 319

   76 expression: expression . ',' assignment_expression
  190 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 324
    ','  shift, and go to state 209


State 320

  192 iteration_statement: FOR '(' declaration expression_opt ';' . expression_opt ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    expression_opt             go to state 325


State 321

  191 iteration_statement: FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 326


State 322

   13 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 13 (postfix_expression)


State 323

  187 selection_statement: IF '(' expression ')' statement ELSE . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 327
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 324

  190 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 328


State 325

  192 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 329


State 326

  191 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    '('             shift, and go to state 74
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    expression_opt             go to state 330


State 327

  187 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 187 (selection_statement)


State 328

  190 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 190 (iteration_statement)


State 329

  192 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 331
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 330

  191 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 332


State 331

  192 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 192 (iteration_statement)


State 332

  191 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    IDENTIFIER      shift, and go to state 166
    INCREMENT       shift, and go to state 71
    DECREMENT       shift, and go to state 72
    SIZEOF          shift, and go to state 73
    CASE            shift, and go to state 167
    DEFAULT         shift, and go to state 168
    IF              shift, and go to state 169
    SWITCH          shift, and go to state 170
    WHILE           shift, and go to state 171
    DO              shift, and go to state 172
    FOR             shift, and go to state 173
    GOTO            shift, and go to state 174
    CONTINUE        shift, and go to state 175
    BREAK           shift, and go to state 176
    RETURN          shift, and go to state 177
    '('             shift, and go to state 74
    '{'             shift, and go to state 100
    '&'             shift, and go to state 76
    '*'             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    CONSTANT        [reduce using rule 185 (expression_opt)]
    STRING_LITERAL  [reduce using rule 185 (expression_opt)]
    IDENTIFIER      [reduce using rule 185 (expression_opt)]
    INCREMENT       [reduce using rule 185 (expression_opt)]
    DECREMENT       [reduce using rule 185 (expression_opt)]
    SIZEOF          [reduce using rule 185 (expression_opt)]
    CASE            [reduce using rule 185 (expression_opt)]
    DEFAULT         [reduce using rule 185 (expression_opt)]
    IF              [reduce using rule 185 (expression_opt)]
    SWITCH          [reduce using rule 185 (expression_opt)]
    WHILE           [reduce using rule 185 (expression_opt)]
    DO              [reduce using rule 185 (expression_opt)]
    FOR             [reduce using rule 185 (expression_opt)]
    GOTO            [reduce using rule 185 (expression_opt)]
    CONTINUE        [reduce using rule 185 (expression_opt)]
    BREAK           [reduce using rule 185 (expression_opt)]
    RETURN          [reduce using rule 185 (expression_opt)]
    '('             [reduce using rule 185 (expression_opt)]
    '{'             [reduce using rule 185 (expression_opt)]
    '&'             [reduce using rule 185 (expression_opt)]
    '*'             [reduce using rule 185 (expression_opt)]
    '+'             [reduce using rule 185 (expression_opt)]
    '-'             [reduce using rule 185 (expression_opt)]
    '~'             [reduce using rule 185 (expression_opt)]
    '!'             [reduce using rule 185 (expression_opt)]
    $default        reduce using rule 185 (expression_opt)

    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 114
    expression                 go to state 178
    statement                  go to state 333
    labeled_statement          go to state 181
    compound_statement         go to state 182
    expression_statement       go to state 186
    expression_opt             go to state 187
    selection_statement        go to state 188
    iteration_statement        go to state 189
    jump_statement             go to state 190


State 333

  191 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 191 (iteration_statement)
